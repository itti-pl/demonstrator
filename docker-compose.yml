---
version: '2.2'

volumes:
  elasticsearch_data:
  elasticsearch_config:
  ost_data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "3500:3500"
    environment:
      ZOOKEEPER_CLIENT_PORT: 3500
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  broker:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "3501:3501"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:3500"
      KAFKA_ADVERTISED_LISTENERS: "EXTERNAL://localhost:3501,PLAINTEXT://broker:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_LISTENERS: "EXTERNAL://0.0.0.0:3501,PLAINTEXT://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 100000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 100000000
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped

  connect:
    image: bartosz012/kafka_connect:latest
    hostname: connect
    container_name: connect
    build:
      context: ./connect
      dockerfile: Dockerfile
    depends_on:
      - broker
      - schema_registry
    ports:
      - "127.0.0.1:8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema_registry:3502
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    restart: unless-stopped

  ost_db:
    image: postgres:9.6
    hostname: ost_db
    container_name: ost_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ktHo8mv7Xzq7nDN5YpLwfgDp3T2cPEY9nhooA6GE2ktz9jH8rLLTtNnT8UHgYvcUypDFuK2y
      - POSTGRES_DB=TRIAL_ADMIN
    volumes:
      - ost_data:/var/lib/postgresql/data
    restart: unless-stopped

  ost_api:
    image: bartosz012/ost_api:latest
    hostname: ost_api
    container_name: ost_api
    links:
      - ost_db
    ports:
      - "8080:8080"
    environment:
      - OST_DB_HOST=ost_db
      - OST_DB_PORT=5432
      - OST_DB_NAME=TRIAL_ADMIN
      - OST_DB_USER=postgres
      - OST_DB_PASSWORD=ktHo8mv7Xzq7nDN5YpLwfgDp3T2cPEY9nhooA6GE2ktz9jH8rLLTtNnT8UHgYvcUypDFuK2y
      - DRIVER_IS_TESTBED_ON=true
    restart: unless-stopped
    depends_on:
      - broker
      - schema_registry
      - ost_db

  ost_web:
    image: drivereu/ost_frontend:without_keycloak
    hostname: ost_web
    container_name: ost_web
    links:
      - ost_db
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certificates:/usr/share/certificates
    restart: unless-stopped
    depends_on:
      - ost_api

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    hostname: elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - 'ES_JAVA_OPTS: -Xms1g -Xmx1g'
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data/:rw
      - elasticsearch_config:/usr/share/elasticsearch/config/:rw
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    restart: unless-stopped
    cpu_percent: 50
    mem_limit: 1000000000
    memswap_limit: 2000000000

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.0
    hostname: kibana
    container_name: kibana
    environment:
      - xpack.security.enabled=false
    ports:
      - "127.0.0.1:5601:5601"
    restart: unless-stopped
    depends_on:
      - elasticsearch

  simulator:
    image: bartosz012/event_simulator:latest
    container_name: simulator
    restart: unless-stopped
    environment:
      KAFKA.BOOTSTRAP_SERVERS: 'broker:9092'
      KAFKA.GROUP_ID: simulator
    ports:
      - "127.0.0.1:8187:8187"
